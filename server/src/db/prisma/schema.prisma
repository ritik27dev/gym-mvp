datasource db {
  provider = "postgresql"  // or your DB
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-arm64-openssl-1.1.x", "debian-openssl-1.1.x", "linux-arm64-openssl-1.1.x", "linux-musl", "darwin", "darwin-arm64"]

}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  emailConfirmed      Boolean   @default(false)
  password            String
  subscription        String?
  createdAt           DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
  organizationId      Int?
  isAdmin             Boolean   @default(false)
  activeCurrentMonth  Boolean   @default(false)

  meals               Meal[]
  moodEntries         MoodEntry[]  // <-- Added opposite relation field

}

model Meal {
  id             Int      @id @default(autoincrement())
  userId         Int
  when           String
  dishName       String
  ingredients    String
  macronutrients String
  createdAt      DateTime @default(now())
  date           DateTime
  user           User     @relation(fields: [userId], references: [id])
}

model MoodEntry {
  id          String   @id @default(cuid())
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
  type        MoodType
  mood        MoodValue

  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum MoodType {
  DAILY_CHECKIN
  POST_WORKOUT
  POST_MEDITATION
}

enum MoodValue {
  HAPPY
  CONTENT
  NEUTRAL
  STRESSED
  SAD
  ANGRY
}